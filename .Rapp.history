library(rgdal)#
library(spatstat)#
library(sp)#
library(spdep)#
library(maptools)#
library(ncf)#
library(png)#
library(raster)#
library(sna)#
library(mapplots)#
library(igraph)#
library(lattice)#
setwd("~/Wytham-tits-information-flow") #setwd("/Users/mariussomveille/Desktop/Oxford/Project_Ben_Robin/Wytham-tits-information-flow")#
##  Import and process the data for Wytham Woods' great tits #
#
# Data on the movement of birds across Wytham Woods#
load("data/movements_data.RData")		#
#
# Coordinates of the feeders across Wytham Woods#
loggers_coords <- read.csv("data/Wytham_loggers_coordinates.csv")#
#
# Shapefile of Wytham Woods#
wyt <-readOGR("data", "perimeter poly with clearings_region")#
poly.sp<-SpatialPolygons(list(wyt@polygons[[1]]))#
poly.owin<-as(poly.sp,"owin")
setwd("/Users/mariussomveille/Desktop/Oxford/Project_Ben_Robin/Wytham-tits-information-flow")
load("data/movements_data.RData")		#
#
# Coordinates of the feeders across Wytham Woods#
loggers_coords <- read.csv("data/Wytham_loggers_coordinates.csv")#
#
# Shapefile of Wytham Woods#
wyt <-readOGR("data", "perimeter poly with clearings_region")#
poly.sp<-SpatialPolygons(list(wyt@polygons[[1]]))#
poly.owin<-as(poly.sp,"owin")
feeders.distances <- dist(loggers_coords[,2:3], upper=T, diag=T)#
###  FIGURE 1: Local traditions emerge when conformity is strong relative to the movement rate  ####
#
resultsModel_data <- read.csv("outputs/resultsModel_2patches.csv")
par(mfrow=c(2,3), mar=c(2.8,3.5,0.5,0.5), mgp=c(1.75,0.5,0))#
# Initial conditions: 40 naive individuals in P1 and 60 naive individuals in P2; intermediate learning rate (alpha = 0.005)#
#
UP1 = 40  # Number of naive individuals in patch P1 at the start of the simulation#
#
x = resultsModel_data$Beta[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)]#
y = resultsModel_data$Lambda[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)]#
z = rep(0, length(x))#
z[which(resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] > 0.33 & resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] < 0.66 & resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] < 0.01)] <- 1#
z[which(resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] >= 0.01)] <- 2#
z[which(resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] >= 0.1)] <- 3#
z[which(resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] > 0.66 & resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] < 0.01)] <- 4#
z[which(resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] < 0.33 & resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] < 0.01)] <- 5#
xx <- seq(1.0, 5, 0.2)#
yy <- seq(0, 0.0100, 0.0005)#
z = z[which(match(as.character(x), as.character(xx), nomatch=0) > 0)]#
y = y[which(match(as.character(x), as.character(xx), nomatch=0) > 0)]#
x = x[which(match(as.character(x), as.character(xx), nomatch=0) > 0)]#
y = c(rep(0,21), y)#
x = c(xx, x)#
z = c(rep(3,21), z)#
rbPal <- colorRampPalette(c("grey", "green", "dark green", "orange", "blue"))#
datcol <- rbPal(5)[as.numeric(cut(z, breaks=c(0.9,1.9,2.9,3.9,4.9,5.9)))]#
plot(x, y, col=datcol, pch=15, ylim=c(0,0.01), xlim=c(1,5), xlab="", ylab=substitute(paste("Movement rate (", italic(m), ")")), cex.lab=1.3, cex=1.4)
x = resultsModel_data$Beta[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)]#
y = resultsModel_data$Lambda[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)]#
z = rep(0, length(x))#
z[which(resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] > 0.33 & resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] < 0.66 & resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] < 0.01)] <- 1#
z[which(resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] >= 0.01)] <- 2#
z[which(resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] >= 0.1)] <- 3#
z[which(resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] > 0.66 & resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] < 0.01)] <- 4#
z[which(resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] < 0.33 & resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] < 0.01)] <- 5#
xx <- seq(1.0, 5, 0.2)#
yy <- seq(0, 0.0100, 0.0005)#
z = z[which(match(as.character(x), as.character(xx), nomatch=0) > 0)]#
y = y[which(match(as.character(x), as.character(xx), nomatch=0) > 0)]#
x = x[which(match(as.character(x), as.character(xx), nomatch=0) > 0)]#
y = c(rep(0,21), y)#
x = c(xx, x)#
z = c(rep(3,21), z)#
rbPal <- colorRampPalette(c("grey", "green", "dark green", "orange", "blue"))#
datcol <- rbPal(5)[as.numeric(cut(z, breaks=c(0.9,1.9,2.9,3.9,4.9,5.9)))]#
plot(x, y, col=datcol, pch=15, ylim=c(0,0.01), xlim=c(1,5), xlab="", ylab="", cex.lab=1.3, cex=1.4)#
#
# Illustrate initial conditions#
plot(c(1,1), c(1,2), cex=c(6,4)*1.2, xlab="", ylab="", xlim=c(0.97,1.03), ylim=c(0.5,2.5), col=c("blue","orange"), axes=F)#
arrows(1, 1.31, 1, 1.79, length=0.05, col="dark grey", lwd=1.3, code=3)#
mtext(expression("P"[1]*": 40 inds"), side=3, line=-3.4, at=0.97, cex=0.8)#
mtext(expression("P"[2]*": 60 inds"), side=1, line=-2.9, at=0.97, cex=0.8)#
# Initial conditions: 49 naive individuals in P1 and 51 naive individuals in P2; intermediate learning rate (alpha = 0.005)#
#
UP1 = 49		# Number of naive individuals in patch P1 at the start of the simulation#
#
x = resultsModel_data$Beta[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)]#
y = resultsModel_data$Lambda[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)]#
z = rep(0, length(x))#
z[which(resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] > 0.33 & resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] < 0.66 & resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] < 0.01)] <- 1#
z[which(resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] >= 0.01)] <- 2#
z[which(resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] >= 0.1)] <- 3#
z[which(resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] > 0.66 & resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] < 0.01)] <- 4#
z[which(resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] < 0.33 & resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] < 0.01)] <- 5#
xx <- seq(1.0, 5, 0.2)#
yy <- seq(0, 0.0100, 0.0005)#
z = z[which(match(as.character(x), as.character(xx), nomatch=0) > 0)]#
y = y[which(match(as.character(x), as.character(xx), nomatch=0) > 0)]#
x = x[which(match(as.character(x), as.character(xx), nomatch=0) > 0)]#
y = c(rep(0,21), y)#
x = c(xx, x)#
z = c(rep(3,21), z)#
rbPal <- colorRampPalette(c("grey", "green", "dark green", "orange", "blue"))#
datcol <- rbPal(5)[as.numeric(cut(z, breaks=c(0.9,1.9,2.9,3.9,4.9,5.9)))]#
plot(x, y, col=datcol, pch=15, ylim=c(0,0.01), xlim=c(1,5), xlab=substitute(paste("Conformity strength (", italic(Î»), ")")), ylab=substitute(paste("Movement rate (", italic(m), ")")), cex.lab=1.3, cex=1.4)#
# Initial conditions: 49 naive individuals in P1 and 51 naive individuals in P2; fast learning rate (alpha = 0.01)#
#
x = resultsModel_data$Beta[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)]#
y = resultsModel_data$Lambda[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)]#
z = rep(0, length(x))#
z[which(resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] > 0.33 & resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] < 0.66 & resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] < 0.01)] <- 1#
z[which(resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] >= 0.01)] <- 2#
z[which(resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] >= 0.1)] <- 3#
z[which(resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] > 0.66 & resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] < 0.01)] <- 4#
z[which(resultsModel_data$Total_prop_Ls[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.005)] < 0.33 & resultsModel_data$Var[which(resultsModel_data$Patch1_Us == UP1 & resultsModel_data$Alpha == 0.01)] < 0.01)] <- 5#
xx <- seq(1.0, 5, 0.2)#
yy <- seq(0, 0.0100, 0.0005)#
z = z[which(match(as.character(x), as.character(xx), nomatch=0) > 0)]#
y = y[which(match(as.character(x), as.character(xx), nomatch=0) > 0)]#
x = x[which(match(as.character(x), as.character(xx), nomatch=0) > 0)]#
y = c(rep(0,21), y)#
x = c(xx, x)#
z = c(rep(3,21), z)#
rbPal <- colorRampPalette(c("grey", "green", "dark green", "orange", "blue"))#
datcol <- rbPal(5)[as.numeric(cut(z, breaks=c(0.9,1.9,2.9,3.9,4.9,5.9)))]#
plot(x, y, col=datcol, pch=15, ylim=c(0,0.01), xlim=c(1,5), xlab=substitute(paste("Conformity strength (", italic(Î»), ")")), ylab="", cex.lab=1.3, cex=1.4)#
#
# Illustrate initial conditions#
plot(c(1,1), c(1,2), cex=c(5.1,4.9)*1.2, xlab="", ylab="", xlim=c(0.97,1.03), ylim=c(0.5,2.5), col=c("blue","orange"), axes=F)#
arrows(1, 1.27, 1, 1.74, length=0.05, col="dark grey", lwd=1.3, code=3)#
mtext(expression("P"[1]*": 49 inds"), side=3, line=-3.4, at=0.97, cex=0.8)#
mtext(expression("P"[2]*": 51 inds"), side=1, line=-2.9, at=0.97, cex=0.8)#
## Plot examples of the evolution of the number of naive individuals (black curve) and number of solvers using solution s1 (orange curve) and solution s2 (blue curve)#
# Example of model run resulting in mixture of solutions in every patches (lambda=1 â no conformity bias included; m=0.003; alpha=0.01)#
#
par(mfrow=c(2,1), mar=c(2.5,3,0.5,0.4), mgp=c(1.5,0.5,0))#
#
resultsModel <- read.csv("outputs/resultsModel_2patches1.csv", header =F)#
#
# Patch 1#
plot(1:151, resultsModel[,1], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,3]+resultsModel[1,5],resultsModel[1,2]+resultsModel[1,4]+resultsModel[1,6])), xlab="", ylab="Number of individuals", axes=F, cex.lab=1.2, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,3], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,5], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[1]*""), side=3, at=75, cex=1.2, line=-0.75)#
#
# Patch 2#
plot(1:151, resultsModel[,1], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,3]+resultsModel[1,5],resultsModel[1,2]+resultsModel[1,4]+resultsModel[1,6])), xlab="Time (days)", ylab="Number of individuals", axes=F, cex.lab=1.2, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,4], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,6], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[2]*""), side=3, at=75, cex=1.2, line=-0.75)#
# Example of model run resulting in solution s2 dominating the system (lambda=1.5 â relatively weak conformity; m=0.003; alpha=0.01)#
#
par(mfrow=c(2,1), mar=c(2.5,3,0.5,0.4), mgp=c(1.5,0.5,0))#
#
resultsModel <- read.csv("outputs/resultsModel_2patches2.csv", header =F)#
#
# Patch 1#
plot(1:151, resultsModel[,1], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,3]+resultsModel[1,5],resultsModel[1,2]+resultsModel[1,4]+resultsModel[1,6])), xlab="", ylab="Number of individuals", axes=F, cex.lab=1.2, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,3], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,5], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[1]*""), side=3, at=75, cex=1.2, line=-0.75)#
#
# Patch 2#
plot(1:151, resultsModel[,1], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,3]+resultsModel[1,5],resultsModel[1,2]+resultsModel[1,4]+resultsModel[1,6])), xlab="Time (days)", ylab="Number of individuals", axes=F, cex.lab=1.2, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,4], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,6], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[2]*""), side=3, at=75, cex=1.2, line=-0.25)#
# Example of model run resulting in strong local traditions (lambda=3.5 â relatively strong conformity; m=0.003; alpha=0.01)#
#
par(mfrow=c(2,1), mar=c(2.5,3,0.5,0.4), mgp=c(1.5,0.5,0))#
#
resultsModel <- read.csv("outputs/resultsModel_2patches3.csv", header =F)#
#
# Patch 1#
plot(1:151, resultsModel[,1], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,3]+resultsModel[1,5],resultsModel[1,2]+resultsModel[1,4]+resultsModel[1,6])), xlab="", ylab="Number of individuals", axes=F, cex.lab=1.2, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,3], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,5], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[1]*""), side=3, at=75, cex=1.2, line=-0.75)#
#
# Patch 2#
plot(1:151, resultsModel[,1], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,3]+resultsModel[1,5],resultsModel[1,2]+resultsModel[1,4]+resultsModel[1,6])), xlab="Time (days)", ylab="Number of individuals", axes=F, cex.lab=1.2, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,4], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,6], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[2]*""), side=3, at=75, cex=1.2, line=-0.75)
par(mfrow=c(3,1), mar=c(2.8,2.8,1,0.3), mgp=c(1.5,0.5,0))#
#
resultsModel <- read.csv("outputs/resultsModel_3patches1.csv", header =F)#
#
# Patch 1#
plot(1:151, resultsModel[,1], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,4]+resultsModel[1,7], resultsModel[1,2]+resultsModel[1,5]+resultsModel[1,8], resultsModel[1,3]+resultsModel[1,6]+resultsModel[1,9])), xlab="", ylab="Number of individuals", axes=F, cex.lab=1.3, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,4], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,7], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[1]*""), side=3, at=75, cex=1.15, line=-0.75)#
#
# Patch 2#
plot(1:151, resultsModel[,2], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,4]+resultsModel[1,7], resultsModel[1,2]+resultsModel[1,5]+resultsModel[1,8], resultsModel[1,3]+resultsModel[1,6]+resultsModel[1,9])), xlab="", ylab="Number of individuals", axes=F, cex.lab=1.3, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,5], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,8], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[2]*""), side=3, at=75, cex=1.15, line=-0.75)#
#
# Patch 3#
plot(1:151, resultsModel[,3], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,4]+resultsModel[1,7], resultsModel[1,2]+resultsModel[1,5]+resultsModel[1,8], resultsModel[1,3]+resultsModel[1,6]+resultsModel[1,9])), xlab="Time (days)", ylab="Number of individuals", axes=F, cex.lab=1.3, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,6], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,9], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[3]*""), side=3, at=75, cex=1.15, line=-0.75)
par(mfrow=c(3,1), mar=c(2.8,2.8,1,0.3), mgp=c(1.5,0.5,0))#
#
resultsModel <- read.csv("outputs/resultsModel_3patches2.csv", header =F)#
#
# Patch 1#
plot(1:151, resultsModel[,1], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,4]+resultsModel[1,7], resultsModel[1,2]+resultsModel[1,5]+resultsModel[1,8], resultsModel[1,3]+resultsModel[1,6]+resultsModel[1,9])), xlab="", ylab="Number of individuals", axes=F, cex.lab=1.3, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,4], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,7], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[1]*""), side=3, at=75, cex=1.15, line=-0.75)#
#
# Patch 2#
plot(1:151, resultsModel[,2], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,4]+resultsModel[1,7], resultsModel[1,2]+resultsModel[1,5]+resultsModel[1,8], resultsModel[1,3]+resultsModel[1,6]+resultsModel[1,9])), xlab="", ylab="Number of individuals", axes=F, cex.lab=1.3, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,5], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,8], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[2]*""), side=3, at=75, cex=1.15, line=-0.25)#
#
# Patch 3#
plot(1:151, resultsModel[,3], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,4]+resultsModel[1,7], resultsModel[1,2]+resultsModel[1,5]+resultsModel[1,8], resultsModel[1,3]+resultsModel[1,6]+resultsModel[1,9])), xlab="Time (days)", ylab="Number of individuals", axes=F, cex.lab=1.3, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,6], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,9], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[3]*""), side=3, at=75, cex=1.15, line=-0.75)
par(mfrow=c(3,1), mar=c(2.8,2.8,1,0.3), mgp=c(1.5,0.5,0))#
#
resultsModel <- read.csv("outputs/resultsModel_3patches3.csv", header =F)#
#
# Patch 1#
plot(1:151, resultsModel[,1], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,4]+resultsModel[1,7], resultsModel[1,2]+resultsModel[1,5]+resultsModel[1,8], resultsModel[1,3]+resultsModel[1,6]+resultsModel[1,9])), xlab="", ylab="Number of individuals", axes=F, cex.lab=1.3, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,4], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,7], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[1]*""), side=3, at=75, cex=1.15, line=-0.75)#
#
# Patch 2#
plot(1:151, resultsModel[,2], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,4]+resultsModel[1,7], resultsModel[1,2]+resultsModel[1,5]+resultsModel[1,8], resultsModel[1,3]+resultsModel[1,6]+resultsModel[1,9])), xlab="", ylab="Number of individuals", axes=F, cex.lab=1.3, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,5], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,8], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[2]*""), side=3, at=75, cex=1.15, line=-0.25)#
#
# Patch 3#
plot(1:151, resultsModel[,3], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,4]+resultsModel[1,7], resultsModel[1,2]+resultsModel[1,5]+resultsModel[1,8], resultsModel[1,3]+resultsModel[1,6]+resultsModel[1,9])), xlab="Time (days)", ylab="Number of individuals", axes=F, cex.lab=1.3, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,6], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,9], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[3]*""), side=3, at=75, cex=1.15, line=-0.75)
par(mfrow=c(3,1), mar=c(2.8,2.8,1,0.3), mgp=c(1.5,0.5,0))#
#
resultsModel <- read.csv("outputs/resultsModel_3patches4.csv", header =F)#
#
# Patch 1#
plot(1:151, resultsModel[,1], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,4]+resultsModel[1,7], resultsModel[1,2]+resultsModel[1,5]+resultsModel[1,8], resultsModel[1,3]+resultsModel[1,6]+resultsModel[1,9])), xlab="", ylab="Number of individuals", axes=F, cex.lab=1.3, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,4], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,7], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[1]*""), side=3, at=75, cex=1.15, line=-0.75)#
#
# Patch 2#
plot(1:151, resultsModel[,2], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,4]+resultsModel[1,7], resultsModel[1,2]+resultsModel[1,5]+resultsModel[1,8], resultsModel[1,3]+resultsModel[1,6]+resultsModel[1,9])), xlab="", ylab="Number of individuals", axes=F, cex.lab=1.3, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,5], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,8], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[2]*""), side=3, at=75, cex=1.15, line=-0.75)#
#
# Patch 3#
plot(1:151, resultsModel[,3], col="black", type="l", ylim=c(0,max(resultsModel[1,1]+resultsModel[1,4]+resultsModel[1,7], resultsModel[1,2]+resultsModel[1,5]+resultsModel[1,8], resultsModel[1,3]+resultsModel[1,6]+resultsModel[1,9])), xlab="Time (days)", ylab="Number of individuals", axes=F, cex.lab=1.3, lwd=1.5)#
axis(side=1)#
axis(side=2)#
points(1:151, resultsModel[,6], col="orange", type="l", lwd=1.5)#
points(1:151, resultsModel[,9], col="blue", type="l", lwd=1.5)#
mtext(expression("P"[3]*""), side=3, at=75, cex=1.15, line=-0.75)
par(mfrow=c(3,3), mar=c(2.5,2.5,2.5,0.1), mgp=c(1.5,0.5,0))#
#
## Summary statistics (total prevalence of solution s1, and variance in the prevalence of solution s1) outputed by model runs with initial conditions randomized #
#
# With no conformity (lambda = 1)#
resultsModel_random_forestDist_data_conf1 <- read.csv("outputs/resultsModel_wytham_sumstats_random_conformity1.csv", header=F)#
diff_centr_conf1 <- resultsModel_random_forestDist_data_conf1[,6] - resultsModel_random_forestDist_data_conf1[,5]#
diff_pools_conf1 <- resultsModel_random_forestDist_data_conf1[,3] - resultsModel_random_forestDist_data_conf1[,4]#
length(which(resultsModel_random_forestDist_data_conf1[,1] > 0.01))/100#
length(which(resultsModel_random_forestDist_data_conf1[,1] < 0.01 & resultsModel_random_forestDist_data_conf1[,2] < 0.33))/100#
length(which(resultsModel_random_forestDist_data_conf1[,1] < 0.01 & resultsModel_random_forestDist_data_conf1[,2] > 0.66))/100#
length(which(resultsModel_random_forestDist_data_conf1[,1] < 0.01 & resultsModel_random_forestDist_data_conf1[,2] > 0.33 & resultsModel_random_forestDist_data_conf1[,2] < 0.66))/100#
#
plot(resultsModel_random_forestDist_data_conf1[,2], resultsModel_random_forestDist_data_conf1[,1], pch=20, xlim=c(0,1), ylim=c(0,0.12), xlab="", ylab=expression("Variance in prevalence of solution s"[1]*""), axes=F, col="green", cex.lab=1.1, main=substitute(paste("No conformity (", italic(Î»), " = 1)")))#
points(resultsModel_random_forestDist_data_conf1[,2][which(resultsModel_random_forestDist_data_conf1[,1] > 0.1)], resultsModel_random_forestDist_data_conf1[,1][which(resultsModel_random_forestDist_data_conf1[,1] > 0.1)], pch=20, col="dark green")#
points(resultsModel_random_forestDist_data_conf1[,2][which(resultsModel_random_forestDist_data_conf1[,1] < 0.01 & resultsModel_random_forestDist_data_conf1[,2] < 0.33)], resultsModel_random_forestDist_data_conf1[,1][which(resultsModel_random_forestDist_data_conf1[,1] < 0.01 & resultsModel_random_forestDist_data_conf1[,2] < 0.33)], pch=20, col="blue")#
points(resultsModel_random_forestDist_data_conf1[,2][which(resultsModel_random_forestDist_data_conf1[,1] < 0.01 & resultsModel_random_forestDist_data_conf1[,2] > 0.33)], resultsModel_random_forestDist_data_conf1[,1][which(resultsModel_random_forestDist_data_conf1[,1] < 0.01 & resultsModel_random_forestDist_data_conf1[,2] > 0.33)], pch=20, col="orange")#
points(resultsModel_random_forestDist_data_conf1[,2][which(resultsModel_random_forestDist_data_conf1[,1] < 0.01 & resultsModel_random_forestDist_data_conf1[,2] > 0.33 & resultsModel_random_forestDist_data_conf1[,2] < 0.66)], resultsModel_random_forestDist_data_conf1[,1][which(resultsModel_random_forestDist_data_conf1[,1] < 0.01 & resultsModel_random_forestDist_data_conf1[,2] > 0.33 & resultsModel_random_forestDist_data_conf1[,2] < 0.66)], pch=20, col="dark grey")#
abline(h=0.01)#
axis(side=1)#
axis(side=2)#
legend("topright", inset=.02, box.col="black", c("Mixture of solutions",expression("Solution s"[1]*" dominates"), expression("Solution s"[2]*" dominates"), "Weak local traditions", "Strong local traditions"), col=c("dark grey", "orange", "blue", "green", "dark green"), pch=20)
patch.distances <- as.matrix(dist(loggers_coords[,c(2,3)], upper=T))[1:60,1:60]#
diag(patch.distances) <- NA#
nn <- apply(patch.distances, 2, function(x) order(x)[1:4])#
#
slopes = vector()#
for(i in 1:60){		#
	slopes[i] = (loggers_coords[nn[1,i],3] - loggers_coords[i,3]) / (loggers_coords[nn[1,i],2] - loggers_coords[i,2])#
	if((loggers_coords[nn[1,i],2] - loggers_coords[i,2]) == 0){#
		slopes[i] = 0#
	}#
}
dim(patch.distances)
resultsModel <- read.csv("outputs/resultsModel_wytham2.csv", header=F)
resultsModel <- read.csv("outputs/resultsModel_wytham1.csv", header=F)  # Change to resultsModel_wytham2.csv to plot the spread of information across Wytham Woods resulting in solution s1 dominating the system; and to resultsModel_wytham3.csv to plot the spread of information across Wytham Woods resulting in stable local traditions#
resultsModel <- abs(resultsModel)#
tmax = 150  # total number of time steps
for(time.point in 1:5){#
	if (time.point < 10) {name = paste("plot_wytham_00", time.point,'.png', sep="")}#
	if (time.point >= 10 && time.point < 100) {name = paste("plot_wytham_0", time.point,'.png', sep="")}#
	if (time.point >= 100) {name = paste("plot_wytham_", time.point,'.png', sep="")}#
	model_res <- cbind(as.matrix(resultsModel)[time.point,1:65], as.matrix(resultsModel)[time.point,66:130], as.matrix(resultsModel)[time.point,131:195])#
	model_res_list <- as.list(as.data.frame(t(model_res)))#
	png(name, width = 1500, height=500)#
	par(mfrow=c(1,3), mar=c(0.1,0.1,0.1,0.1), mgp=c(1.5,0.5,0))#
	plot(poly.owin, main="")	#
	if(is.element(time.point, seq(1,tmax,2))){#
		for(i in 1:60){#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[1,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[1,i],3], col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[1,i]]][1] / dist(loggers_coords[c(i,nn[1,i]),c(2,3)], upper=T)), lty="11")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[2,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[2,i],3], col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[2,i]]][1] / dist(loggers_coords[c(i,nn[2,i]),c(2,3)], upper=T)), lty="11")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[3,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[3,i],3], col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[3,i]]][1] / dist(loggers_coords[c(i,nn[3,i]),c(2,3)], upper=T)), lty="11")#
		}#
	}#
	if(is.element(time.point, seq(2,tmax,2))){#
		for(i in 1:60){#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[1,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[1,i],3], col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[1,i]]][1] / dist(loggers_coords[c(i,nn[1,i]),c(2,3)], upper=T)), lty="22")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[2,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[2,i],3], col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[2,i]]][1] / dist(loggers_coords[c(i,nn[2,i]),c(2,3)], upper=T)), lty="22")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[3,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[3,i],3], col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[3,i]]][1] / dist(loggers_coords[c(i,nn[3,i]),c(2,3)], upper=T)), lty="22")#
			#segments(x0=loggers_coords[i,2]+40, x1=loggers_coords[nn[4,i],2]+40, y0=loggers_coords[i,3]+(40*slopes[i]), y1=loggers_coords[nn[4,i],3]+(40*slopes[i]), col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[3,i]]][1] / dist(loggers_coords[c(i,nn[4,i]),c(2,3)], upper=T)), lty=2)#
		}#
	}#
	for(i in 1:60){#
		add.pie(z=model_res_list[[i]], x=loggers_coords[i,"x"], y=loggers_coords[i,"y"], labels="", radius=loggers[i,5]*1.2, col=c("grey", "orange", "blue"))#
	}#
	mtext(expression("Movements of naÃ¯ves"), side=3, line=-2.8, cex=1.8)#
	plot(poly.owin, main="")#
	if(is.element(time.point, seq(1,tmax,2))){#
		for(i in 1:60){#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[1,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[1,i],3], col="orange", lwd=(1 * model_res_list[[i]][2] * model_res_list[[nn[1,i]]][2] / dist(loggers_coords[c(i,nn[1,i]),c(2,3)], upper=T)), lty="11")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[2,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[2,i],3], col="orange", lwd=(1 * model_res_list[[i]][2] * model_res_list[[nn[2,i]]][2] / dist(loggers_coords[c(i,nn[2,i]),c(2,3)], upper=T)), lty="11")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[3,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[3,i],3], col="orange", lwd=(1 * model_res_list[[i]][2] * model_res_list[[nn[3,i]]][2] / dist(loggers_coords[c(i,nn[3,i]),c(2,3)], upper=T)), lty="11")#
		}#
	}#
	if(is.element(time.point, seq(2,tmax,2))){#
		for(i in 1:60){#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[1,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[1,i],3], col="orange", lwd=(1 * model_res_list[[i]][2] * model_res_list[[nn[1,i]]][2] / dist(loggers_coords[c(i,nn[1,i]),c(2,3)], upper=T)), lty="22")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[2,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[2,i],3], col="orange", lwd=(1 * model_res_list[[i]][2] * model_res_list[[nn[2,i]]][2] / dist(loggers_coords[c(i,nn[2,i]),c(2,3)], upper=T)), lty="22")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[3,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[3,i],3], col="orange", lwd=(1 * model_res_list[[i]][2] * model_res_list[[nn[3,i]]][2] / dist(loggers_coords[c(i,nn[3,i]),c(2,3)], upper=T)), lty="22")#
		}#
	}#
	for(i in 1:60){#
		add.pie(z=model_res_list[[i]], x=loggers_coords[i,"x"], y=loggers_coords[i,"y"], labels="", radius=loggers[i,5]*1.2, col=c("grey", "orange", "blue"))#
	}#
	mtext(expression("Movements of solvers s"[1]*""), side=3, line=-3.2, cex=1.8)#
	mtext(paste("Day", time.point), side=1, line=-1.5, cex=2.5)#
	plot(poly.owin, main="")#
	if(is.element(time.point, seq(1,tmax,2))){#
		for(i in 1:60){#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[1,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[1,i],3], col="blue", lwd=(1 * model_res_list[[i]][3] * model_res_list[[nn[1,i]]][3] / dist(loggers_coords[c(i,nn[1,i]),c(2,3)], upper=T)), lty="11")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[2,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[2,i],3], col="blue", lwd=(1 * model_res_list[[i]][3] * model_res_list[[nn[2,i]]][3] / dist(loggers_coords[c(i,nn[2,i]),c(2,3)], upper=T)), lty="11")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[3,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[3,i],3], col="blue", lwd=(1 * model_res_list[[i]][3] * model_res_list[[nn[3,i]]][3] / dist(loggers_coords[c(i,nn[3,i]),c(2,3)], upper=T)), lty="11")#
		}#
	}#
	if(is.element(time.point, seq(2,tmax,2))){#
		for(i in 1:60){#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[1,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[1,i],3], col="blue", lwd=(1 * model_res_list[[i]][3] * model_res_list[[nn[1,i]]][3] / dist(loggers_coords[c(i,nn[1,i]),c(2,3)], upper=T)), lty="22")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[2,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[2,i],3], col="blue", lwd=(1 * model_res_list[[i]][3] * model_res_list[[nn[2,i]]][3] / dist(loggers_coords[c(i,nn[2,i]),c(2,3)], upper=T)), lty="22")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[3,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[3,i],3], col="blue", lwd=(1 * model_res_list[[i]][3] * model_res_list[[nn[3,i]]][3] / dist(loggers_coords[c(i,nn[3,i]),c(2,3)], upper=T)), lty="22")#
		}#
	}#
	for(i in 1:60){#
		add.pie(z=model_res_list[[i]], x=loggers_coords[i,"x"], y=loggers_coords[i,"y"], labels="", radius=loggers[i,5]*1.2, col=c("grey", "orange", "blue"))#
	}#
	mtext(expression("Movements of solvers s"[2]*""), side=3, line=-3.2, cex=1.8)#
	dev.off()#
}
for(time.point in 100:105){#
	if (time.point < 10) {name = paste("plot_wytham_00", time.point,'.png', sep="")}#
	if (time.point >= 10 && time.point < 100) {name = paste("plot_wytham_0", time.point,'.png', sep="")}#
	if (time.point >= 100) {name = paste("plot_wytham_", time.point,'.png', sep="")}#
	model_res <- cbind(as.matrix(resultsModel)[time.point,1:65], as.matrix(resultsModel)[time.point,66:130], as.matrix(resultsModel)[time.point,131:195])#
	model_res_list <- as.list(as.data.frame(t(model_res)))#
	png(name, width = 1500, height=500)#
	par(mfrow=c(1,3), mar=c(0.1,0.1,0.1,0.1), mgp=c(1.5,0.5,0))#
	plot(poly.owin, main="")	#
	if(is.element(time.point, seq(1,tmax,2))){#
		for(i in 1:60){#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[1,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[1,i],3], col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[1,i]]][1] / dist(loggers_coords[c(i,nn[1,i]),c(2,3)], upper=T)), lty="11")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[2,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[2,i],3], col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[2,i]]][1] / dist(loggers_coords[c(i,nn[2,i]),c(2,3)], upper=T)), lty="11")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[3,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[3,i],3], col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[3,i]]][1] / dist(loggers_coords[c(i,nn[3,i]),c(2,3)], upper=T)), lty="11")#
		}#
	}#
	if(is.element(time.point, seq(2,tmax,2))){#
		for(i in 1:60){#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[1,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[1,i],3], col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[1,i]]][1] / dist(loggers_coords[c(i,nn[1,i]),c(2,3)], upper=T)), lty="22")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[2,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[2,i],3], col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[2,i]]][1] / dist(loggers_coords[c(i,nn[2,i]),c(2,3)], upper=T)), lty="22")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[3,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[3,i],3], col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[3,i]]][1] / dist(loggers_coords[c(i,nn[3,i]),c(2,3)], upper=T)), lty="22")#
			#segments(x0=loggers_coords[i,2]+40, x1=loggers_coords[nn[4,i],2]+40, y0=loggers_coords[i,3]+(40*slopes[i]), y1=loggers_coords[nn[4,i],3]+(40*slopes[i]), col="grey", lwd=(1 * model_res_list[[i]][1] * model_res_list[[nn[3,i]]][1] / dist(loggers_coords[c(i,nn[4,i]),c(2,3)], upper=T)), lty=2)#
		}#
	}#
	for(i in 1:60){#
		add.pie(z=model_res_list[[i]], x=loggers_coords[i,"x"], y=loggers_coords[i,"y"], labels="", radius=loggers[i,5]*1.2, col=c("grey", "orange", "blue"))#
	}#
	mtext(expression("Movements of naÃ¯ves"), side=3, line=-2.8, cex=1.8)#
	plot(poly.owin, main="")#
	if(is.element(time.point, seq(1,tmax,2))){#
		for(i in 1:60){#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[1,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[1,i],3], col="orange", lwd=(1 * model_res_list[[i]][2] * model_res_list[[nn[1,i]]][2] / dist(loggers_coords[c(i,nn[1,i]),c(2,3)], upper=T)), lty="11")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[2,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[2,i],3], col="orange", lwd=(1 * model_res_list[[i]][2] * model_res_list[[nn[2,i]]][2] / dist(loggers_coords[c(i,nn[2,i]),c(2,3)], upper=T)), lty="11")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[3,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[3,i],3], col="orange", lwd=(1 * model_res_list[[i]][2] * model_res_list[[nn[3,i]]][2] / dist(loggers_coords[c(i,nn[3,i]),c(2,3)], upper=T)), lty="11")#
		}#
	}#
	if(is.element(time.point, seq(2,tmax,2))){#
		for(i in 1:60){#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[1,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[1,i],3], col="orange", lwd=(1 * model_res_list[[i]][2] * model_res_list[[nn[1,i]]][2] / dist(loggers_coords[c(i,nn[1,i]),c(2,3)], upper=T)), lty="22")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[2,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[2,i],3], col="orange", lwd=(1 * model_res_list[[i]][2] * model_res_list[[nn[2,i]]][2] / dist(loggers_coords[c(i,nn[2,i]),c(2,3)], upper=T)), lty="22")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[3,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[3,i],3], col="orange", lwd=(1 * model_res_list[[i]][2] * model_res_list[[nn[3,i]]][2] / dist(loggers_coords[c(i,nn[3,i]),c(2,3)], upper=T)), lty="22")#
		}#
	}#
	for(i in 1:60){#
		add.pie(z=model_res_list[[i]], x=loggers_coords[i,"x"], y=loggers_coords[i,"y"], labels="", radius=loggers[i,5]*1.2, col=c("grey", "orange", "blue"))#
	}#
	mtext(expression("Movements of solvers s"[1]*""), side=3, line=-3.2, cex=1.8)#
	mtext(paste("Day", time.point), side=1, line=-1.5, cex=2.5)#
	plot(poly.owin, main="")#
	if(is.element(time.point, seq(1,tmax,2))){#
		for(i in 1:60){#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[1,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[1,i],3], col="blue", lwd=(1 * model_res_list[[i]][3] * model_res_list[[nn[1,i]]][3] / dist(loggers_coords[c(i,nn[1,i]),c(2,3)], upper=T)), lty="11")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[2,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[2,i],3], col="blue", lwd=(1 * model_res_list[[i]][3] * model_res_list[[nn[2,i]]][3] / dist(loggers_coords[c(i,nn[2,i]),c(2,3)], upper=T)), lty="11")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[3,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[3,i],3], col="blue", lwd=(1 * model_res_list[[i]][3] * model_res_list[[nn[3,i]]][3] / dist(loggers_coords[c(i,nn[3,i]),c(2,3)], upper=T)), lty="11")#
		}#
	}#
	if(is.element(time.point, seq(2,tmax,2))){#
		for(i in 1:60){#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[1,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[1,i],3], col="blue", lwd=(1 * model_res_list[[i]][3] * model_res_list[[nn[1,i]]][3] / dist(loggers_coords[c(i,nn[1,i]),c(2,3)], upper=T)), lty="22")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[2,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[2,i],3], col="blue", lwd=(1 * model_res_list[[i]][3] * model_res_list[[nn[2,i]]][3] / dist(loggers_coords[c(i,nn[2,i]),c(2,3)], upper=T)), lty="22")#
			segments(x0=loggers_coords[i,2], x1=loggers_coords[nn[3,i],2], y0=loggers_coords[i,3], y1=loggers_coords[nn[3,i],3], col="blue", lwd=(1 * model_res_list[[i]][3] * model_res_list[[nn[3,i]]][3] / dist(loggers_coords[c(i,nn[3,i]),c(2,3)], upper=T)), lty="22")#
		}#
	}#
	for(i in 1:60){#
		add.pie(z=model_res_list[[i]], x=loggers_coords[i,"x"], y=loggers_coords[i,"y"], labels="", radius=loggers[i,5]*1.2, col=c("grey", "orange", "blue"))#
	}#
	mtext(expression("Movements of solvers s"[2]*""), side=3, line=-3.2, cex=1.8)#
	dev.off()#
}
