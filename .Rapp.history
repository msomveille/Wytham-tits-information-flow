FI = matrix(0, ncol=P, nrow=N)  # Matrix of number of events previously attended by each individual in each patch#
#
CI = matrix(0, ncol=N, nrow=N)  # Matrix of number of contact that each individual had with each other individual#
#
D = dist(loggers_coords[,2:3], upper=T, diag=T) # Matrix of distances between each pair of patches
attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,1]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/(1+weights.ip)) + (b/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}
attending.ind
contact.events.table[event,1]
head(contact.events.table)
attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/(1+weights.ip)) + (b/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}
attending.ind
attending.individuals[[event]] <- attending.ind
v
attending.individuals
FI[attending.ind, p]
FI[attending.ind, p] <- FI[attending.ind, p] + 1
FI[attending.ind, p]
FI
CI[attending.ind, attending.ind]
CI[attending.ind, attending.ind] + 1
CI[attending.ind, attending.ind]
CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1
diag(CI)
diag(CI) <- 0
diag(CI)
attending.individuals <- list()#
for(event in 1:10){#
	p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(c*D[p,k])) #
			}#
		}#
		weights.ip[i] = weight.ip#
	}#
	attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/(1+weights.ip)) + (b/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}#
	attending.individuals[[event]] <- attending.ind#
	FI[attending.ind, p] <- FI[attending.ind, p] + 1#
	CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1#
	diag(CI) <- 0#
}
dim(D)
class(D)
D = dist(loggers_coords[,2:3], upper=T, diag=T)
class(D)
D[1:5,1:5]
D = as.matrix(dist(loggers_coords[,2:3], upper=T, diag=T))
D[1:5,1:5]
D = as.matrix(dist(loggers_coords[,2:3], upper=T, diag=T)) # Matrix of distances between each pair of patches
attending.individuals <- list()#
for(event in 1:10){#
	p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(c*D[p,k])) #
			}#
		}#
		weights.ip[i] = weight.ip#
	}#
	attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/(1+weights.ip)) + (b/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}#
	attending.individuals[[event]] <- attending.ind#
	FI[attending.ind, p] <- FI[attending.ind, p] + 1#
	CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1#
	diag(CI) <- 0#
}
attending.individuals
attending.individuals <- list()#
for(event in 1:dim(contact.events.table)[1]){#
	p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(c*D[p,k])) #
			}#
		}#
		weights.ip[i] = weight.ip#
	}#
	attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/(1+weights.ip)) + (b/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}#
	attending.individuals[[event]] <- attending.ind#
	FI[attending.ind, p] <- FI[attending.ind, p] + 1#
	CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1#
	diag(CI) <- 0#
}
event
length(attending.individuals)
head(attending.individuals)
CI[1:20,1:20]
CI[1:50,1:15]
FI[1:50,1:15]
apply(FI, 1, sum)
a = 0.1#
b = 1#
c = 1#
# Run the model#
#
attending.individuals <- list()#
for(event in 1:dim(contact.events.table)[1]){#
	p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(c*D[p,k])) #
			}#
		}#
		weights.ip[i] = weight.ip#
	}#
	attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/(1+weights.ip)) + (b/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}#
	attending.individuals[[event]] <- attending.ind#
	FI[attending.ind, p] <- FI[attending.ind, p] + 1#
	CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1#
	diag(CI) <- 0#
}
event
FI[1:50,1:15]
apply(FI, 1, sum)
apply(FI, 1, max-min)
apply(FI, 1, function(x) max(x)-min(x))
FI = matrix(0, ncol=P, nrow=N)  # Matrix of number of events previously attended by each individual in each patch#
#
CI = matrix(0, ncol=N, nrow=N)  # Matrix of number of contact that each individual had with each other individual#
#
D = as.matrix(dist(loggers_coords[,2:3], upper=T, diag=T)) # Matrix of distances between each pair of patches#
# Parameter values#
#
a = 0.1#
b = 1#
c = 1#
# Run the model#
#
attending.individuals <- list()#
for(event in 1:dim(contact.events.table)[1]){#
	p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(c*D[p,k])) #
			}#
		}#
		weights.ip[i] = weight.ip#
	}#
	attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/(1+weights.ip)) + (b/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}#
	attending.individuals[[event]] <- attending.ind#
	FI[attending.ind, p] <- FI[attending.ind, p] + 1#
	CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1#
	diag(CI) <- 0#
}
event
apply(FI, 1, function(x) max(x)-min(x))
apply(FI, 1, sum)
FI[1:50,1:15]
FI = matrix(0, ncol=P, nrow=N)  # Matrix of number of events previously attended by each individual in each patch#
#
CI = matrix(0, ncol=N, nrow=N)  # Matrix of number of contact that each individual had with each other individual#
#
D = as.matrix(dist(loggers_coords[,2:3], upper=T, diag=T)) # Matrix of distances between each pair of patches#
# Parameter values#
#
a = 0.01#
b = 1#
c = 10#
# Run the model#
#
attending.individuals <- list()#
for(event in 1:dim(contact.events.table)[1]){#
	p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(c*D[p,k])) #
			}#
		}#
		weights.ip[i] = weight.ip#
	}#
	attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/(1+weights.ip)) + (b/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}#
	attending.individuals[[event]] <- attending.ind#
	FI[attending.ind, p] <- FI[attending.ind, p] + 1#
	CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1#
	diag(CI) <- 0#
}
event
FI[1:50,1:15]
apply(FI, 1, sum)
e-(1/0.1)
exp(-(1/0.1))
exp(-(1/1))
FI = matrix(0, ncol=P, nrow=N)  # Matrix of number of events previously attended by each individual in each patch#
#
CI = matrix(0, ncol=N, nrow=N)  # Matrix of number of contact that each individual had with each other individual#
#
D = as.matrix(dist(loggers_coords[,2:3], upper=T, diag=T)) # Matrix of distances between each pair of patches#
# Parameter values#
#
a = 0.0001#
b = 0#
c = 0.01#
# Run the model#
#
attending.individuals <- list()#
for(event in 1:dim(contact.events.table)[1]){#
	p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(c*D[p,k])) #
			}#
		}#
		weights.ip[i] = weight.ip#
	}#
	attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/(1+weights.ip)) + (b/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}#
	attending.individuals[[event]] <- attending.ind#
	FI[attending.ind, p] <- FI[attending.ind, p] + 1#
	CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1#
	diag(CI) <- 0#
}
event
FI[1:50,1:15]
p = contact.events.table[event,1]
p
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(c*D[p,k])) #
			}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(100*D[p,k])) #
			}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(0*D[p,k])) #
			}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip
i=1
FI[i,]
P
sum(FI[i,])
2/30
D[p,]
weight.ip = 0#
+ 		for(k in 1:P){#
+ 			if(sum(FI[i,]) > 0){#
+ 				weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(0*D[p,k])) #
+ 			}#
+ 		}
weight.ip = 0#
+ 	for(k in 1:P){#
+ 		if(sum(FI[i,]) > 0){#
+ 			weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(0*D[p,k])) #
+ 		}#
+ 	}
weight.ip = 0#
 	for(k in 1:P){#
#
 			weight.ip = weight.ip + (FI[i,k]/sum(FI[i,])) / (1+(0*D[p,k])) #
#
 	}
weight.ip
weight.ip = 0#
 	for(k in 1:P){#
#
 			weight.ip = weight.ip + ((FI[i,k]/sum(FI[i,])) / (1+(0*D[p,k])))#
#
 	}
weight.ip
weight.ip = 0#
 	for(k in 1:P){#
#
 			weight.ip = weight.ip + (FI[i,k]/sum(FI[i,]))#
#
 	}
weight.ip
i
k
k=1
(FI[i,k]/sum(FI[i,]))
weight.ip = 0#
 	for(k in 1:P){#
#
 			weight.ip = weight.ip + (FI[i,k])#
#
 	}
(FI[i,k]/sum(FI[i,]))
weight.ip = 0#
+ 		for(k in 1:P){#
+ 			if(sum(FI[i,]) > 0){#
+ 				weight.ip = weight.ip + (FI[i,k]) / (1+(1*D[p,k])) #
+ 			}#
+ 		}
weight.ip = 0#
 		for(k in 1:P){#
 			if(sum(FI[i,]) > 0){#
 				weight.ip = weight.ip + (FI[i,k]) / (1+(1*D[p,k])) #
 			}#
 		}
weight.ip
2/3/9
1/3/9
1/3/90
D[1:5,1:5]
(((1+1)^2)/(1+1)) / (1+2)
(((1+1)^2)/(1+1)) / (1+4)
(((1+1)^2)/(1+1)) / (1+6)
(((1+1)^2)/(1+1)) / (1+8)
(((1+1)^2)/(1+1)) / (1+200)
(((1+1)^2)/(1+1)) / (1+400)
(((1+1)^2)/(1+1)) / (1+600)
(((1+1)^2)/(1+1)) / (1+0)
exp(-(1/2))
exp(-(1/0.009950249))
exp(-(1/0.6666667))
(((1+1)^2)/(1+1)) / (1+20)
exp(-(1/0.0952381))
(((1+0)^2)/(1+1)) / (1+20)
(((1+0)^2)/(1+0)) / (1+20)
exp(-(1/  ((((1+0)^2)/(1+1)) / (1+20))  ))
exp(-(1/  ((((1+0)^2)/(1+1)) / (1+40))  ))
exp(-(1/  ((((1+0)^2)/(1+1)) / (1+0))  ))
exp(-(1/  ((((1+1)^2)/(1+1)) / (1+0))  ))
exp(-(10/  ((((1+1)^2)/(1+1)) / (1+0))  ))
exp(-(10/  ((((1+0)^2)/(1+1)) / (1+0))  ))
exp(-(2/  ((((1+1)^2)/(1+1)) / (1+0))  ))
exp(-(2/  ((((1+0)^2)/(1+1)) / (1+0))  ))
exp(-(2/  ((((1+0)^2)/(1+1)) / (1+20))  ))
exp(-(2/  ((((1+1)^2)/(1+1)) / (1+20))  ))
exp(-(1.5/  ((((1+1)^2)/(1+1)) / (1+20))  ))
exp(-(1/  ((((1+1)^2)/(1+1)) / (1+20))  ))
exp(-(1/  ((((1+1)^10)/(1+1)) / (1+20))  ))
exp(-(2/  ((((1+1)^10)/(1+1)) / (1+20))  ))
exp(-(2/  ((((1+0)^10)/(1+1)) / (1+20))  ))
exp(-(2/  ((((1+1)^10)/(1+1)) / (1+0))  ))
exp(-(2/  ((((1+1)^4)/(1+1)) / (1+20))  ))
exp(-(2/  ((((1+1)^4)/(1+1)) / (1+0))  ))
exp(-(2/  ((((1+1)^5)/(1+1)) / (1+20))  ))
exp(-(2/  ((((1+1)^4)/(1+1)) / (1+0))  ))
exp(-(2/  ((((1+1)^5)/(1+1)) / (1+0))  ))
exp(-(2/  ((((1+0)^5)/(1+1)) / (1+0))  ))
exp(-(2/  ((((1+0)^5)/(1+1)) / (1+20))  ))
exp(-(2/  ((((1+0)^5)/(1+1)) / (1+40))  ))
exp(-(2/  ((((1+1)^5)/(1+1)) / (1+0))  ))
exp(-(2/  ((((1+1)^5)/(1+1)) / (1+20))  ))
exp(-(2/  ((((1+1)^5)/(1+1)) / (1+40))  ))
exp(-(2/  ( ((((1+1)^5)/(1+1)) / (1+0)) + ((((1+0)^5)/(1+1)) / (1+20)) + ((((1+0)^5)/(1+1)) / (1+40)) )  ))
exp(-(2/  ( ((((1+0)^5)/(1+1)) / (1+0)) + ((((1+0)^5)/(1+1)) / (1+20)) + ((((1+0)^5)/(1+1)) / (1+40)) )  ))
exp(-(2/  ( ((((1+0)^5)/(1+0)) / (1+0)) + ((((1+0)^5)/(1+0)) / (1+20)) + ((((1+0)^5)/(1+0)) / (1+40)) )  ))
exp(-(2/  ( ((((1+0)^5)/(1+1)) / (1+0)) + ((((1+1)^5)/(1+1)) / (1+20)) + ((((1+0)^5)/(1+1)) / (1+40)) )  ))
exp(-(2/  ( ((((1+0)^5)/(1+1)) / (1+0)) + ((((1+0)^5)/(1+1)) / (1+20)) + ((((1+1)^5)/(1+1)) / (1+40)) )  ))
exp(-(2/  ( ((((1+0)^5)/(1+1)) / (1+0)) + ((((1+0)^5)/(1+1)) / (1+20)) + ((((1+1)^5)/(1+1)) / (1+100)) )  ))
exp(-(2/  ( ((((1+2)^5)/(1+2)) / (1+0)) + ((((1+0)^5)/(1+2)) / (1+20)) + ((((1+0)^5)/(1+2)) / (1+40)) )  ))
exp(-(2/  ( ((((0+2)^5)/(1+2)) / (1+0)) + ((((1+0)^5)/(1+2)) / (1+20)) + ((((1+0)^5)/(1+2)) / (1+40)) )  ))
exp(-(2/  ( ((((1+0)^5)/(1+2)) / (1+0)) + ((((1+0)^5)/(1+2)) / (1+20)) + ((((1+0)^5)/(1+2)) / (1+40)) )  ))
exp(-(2/  ( ((((1+0)^5)/(1+2)) / (1+0)) + ((((1+0)^5)/(1+2)) / (1+20)) + ((((1+0)^5)/(1+2)) / (1+100)) )  ))
exp(-(2/  ( ((((1+0)^5)/(1+2)) / (1+0)) + ((((1+0)^5)/(1+2)) / (1+20)) + ((((1+2)^5)/(1+2)) / (1+100)) )  ))
FI = matrix(0, ncol=P, nrow=N)  # Matrix of number of events previously attended by each individual in each patch#
#
CI = matrix(0, ncol=N, nrow=N)  # Matrix of number of contact that each individual had with each other individual#
#
D = as.matrix(dist(loggers_coords[,2:3], upper=T, diag=T)) # Matrix of distances between each pair of patches#
# Parameter values#
#
a = 2#
b = 0#
c = 0.1
attending.individuals <- list()
event=1
p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^2)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^2)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip
a = 2#
b = 0#
c = 0.1#
# Run the model#
#
attending.individuals <- list()#
for(event in 1:dim(contact.events.table)[1]){#
	p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^2)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}#
	attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/weights.ip) + (b/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}#
	attending.individuals[[event]] <- attending.ind#
	FI[attending.ind, p] <- FI[attending.ind, p] + 1#
	CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1#
	diag(CI) <- 0#
}
event
FI[1:50,1:15]
p = contact.events.table[event,1]
p
i=1
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^2)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip
hist(weights.ip)
FI[i,]
i
FI[,p]
c*D[p,]
PiEpt = exp(-( (a/weights.ip) ))
PiEpt
PiEpt = PiEpt / sum(PiEpt)
PiEpt
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^2)/(1+sum(FI[i,]))) / (1+(0.01*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}
PiEpt = exp(-( (a/weights.ip) ))
PiEpt
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^2)/(1+sum(FI[i,]))) / (1+(10*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}
PiEpt = exp(-( (a/weights.ip) ))
PiEpt
PiEpt = exp(-( (4/weights.ip) ))
PiEpt
PiEpt = exp(-( (0.1/weights.ip) ))
PiEpt
PiEpt = exp(-( (10/weights.ip) ))
PiEpt
PiEpt = PiEpt / sum(PiEpt)
PiEpt
1.709382e-03
8.408371e-08
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^b)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^b)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip
c = 1
a = 10#
b = 5#
c = 1
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^b)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip
PiEpt = exp(-( (10/weights.ip) ))
PiEpt
a = 10#
b = 5#
c = 1
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^b)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip
b
a = 10#
b = 10#
c = 1
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^b)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip
a = 10#
b = 2#
c = 1
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^b)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip
b
a = 10#
b = 5#
c = 1#
# Run the model#
#
attending.individuals <- list()#
for(event in 1:dim(contact.events.table)[1]){#
	p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^b)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}#
	attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/weights.ip) + (b/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}#
	attending.individuals[[event]] <- attending.ind#
	FI[attending.ind, p] <- FI[attending.ind, p] + 1#
	CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1#
	diag(CI) <- 0#
}
FI = matrix(0, ncol=P, nrow=N)  # Matrix of number of events previously attended by each individual in each patch#
#
CI = matrix(0, ncol=N, nrow=N)  # Matrix of number of contact that each individual had with each other individual#
#
D = as.matrix(dist(loggers_coords[,2:3], upper=T, diag=T)) # Matrix of distances between each pair of patches#
# Parameter values#
#
a = 10#
b = 5#
c = 1#
d = 0#
#
# Run the model#
#
attending.individuals <- list()#
for(event in 1:dim(contact.events.table)[1]){#
	p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^b)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}#
	attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/weights.ip) + (d/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}#
	attending.individuals[[event]] <- attending.ind#
	FI[attending.ind, p] <- FI[attending.ind, p] + 1#
	CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1#
	diag(CI) <- 0#
}
event
FI[1:50,1:15]
event
p = contact.events.table[event,1]
p
event = 2497
p = contact.events.table[event,1]
p
weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^b)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}
weights.ip
PiEpt = exp(-( (a/weights.ip) + (d/(1+weights.ij)) ))
PiEpt = PiEpt / sum(PiEpt)
PiEpt
FI[,p]
sample(1:N, 1, prob=PiEpt)
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI[,p][sample(1:N, 1, prob=PiEpt)	]
FI = matrix(0, ncol=P, nrow=N)  # Matrix of number of events previously attended by each individual in each patch#
#
CI = matrix(0, ncol=N, nrow=N)  # Matrix of number of contact that each individual had with each other individual#
#
D = as.matrix(dist(loggers_coords[,2:3], upper=T, diag=T)) # Matrix of distances between each pair of patches#
# Parameter values#
#
a = 15#
b = 10#
c = 10#
d = 0#
#
# Run the model#
#
attending.individuals <- list()#
for(event in 1:dim(contact.events.table)[1]){#
	p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^b)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}#
	attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/weights.ip) + (d/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}#
	attending.individuals[[event]] <- attending.ind#
	FI[attending.ind, p] <- FI[attending.ind, p] + 1#
	CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1#
	diag(CI) <- 0#
}
event
FI[1:50,1:15]
FI
FI = matrix(0, ncol=P, nrow=N)  # Matrix of number of events previously attended by each individual in each patch#
#
CI = matrix(0, ncol=N, nrow=N)  # Matrix of number of contact that each individual had with each other individual#
#
D = as.matrix(dist(loggers_coords[,2:3], upper=T, diag=T)) # Matrix of distances between each pair of patches#
# Parameter values#
#
a = 50#
b = 100#
c = 10#
d = 0#
#
# Run the model#
#
attending.individuals <- list()#
for(event in 1:dim(contact.events.table)[1]){#
	p = contact.events.table[event,1]  # in which patch does the event occur#
	weights.ip <- vector()#
	for(i in 1:N){#
		weight.ip = 0#
		for(k in 1:P){#
			#if(sum(FI[i,]) > 0){#
				weight.ip = weight.ip + ( ((1+FI[i,k])^b)/(1+sum(FI[i,]))) / (1+(c*D[p,k])) #
			#}#
		}#
		weights.ip[i] = weight.ip#
	}#
	attending.ind <- vector()#
	for(ind in 1:contact.events.table[event,2]){#
		# compute the probability of attending the event for each individual#
		weights.ij <- vector()#
		for(i in 1:N){#
			weight.ij = 0#
			if(length(attending.ind) > 0){#
				for(j in 1:length(attending.ind)){ #
					if(sum(CI[i,]) > 0){#
						weight.ij = weight.ij + (CI[i,j]/sum(CI[i,]))#
					}#
				}#
			}#
			weights.ij[i] = weight.ij#
		}#
		PiEpt = exp(-( (a/weights.ip) + (d/(1+weights.ij)) ))#
		PiEpt = PiEpt / sum(PiEpt)#
		attending.ind[ind] <- sample(1:N, 1, prob=PiEpt)	#
	}#
	attending.individuals[[event]] <- attending.ind#
	FI[attending.ind, p] <- FI[attending.ind, p] + 1#
	CI[attending.ind, attending.ind] <- CI[attending.ind, attending.ind] + 1#
	diag(CI) <- 0#
}
event
FI[1:50,1:15]
FI
